/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package da_qlnhatro;

/**
 *
 * @author PhanTuan
 */
import Entities.*;
import Services.*;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
public class frm_Contract extends javax.swing.JFrame {

    /**
     * Creates new form frm_Contract
     */
    
    ContractServices HDServices = new ContractServices();
    CustomerServices KHServices = new CustomerServices();

    ArrayList<Contract> DSHD = new ArrayList<Contract>();
    ArrayList<Customer> DSKH = new ArrayList<Customer>();
    

    RoomServices roomServices = new RoomServices();
    RoomTypeServices roomTypeServices = new RoomTypeServices();
    AreaServices areaServices = new AreaServices();
    ArrayList<Room> dsRoom = new ArrayList<Room>();
    ArrayList<Area> dsArea = new ArrayList<Area>();
    
    //Lưu Role đăng nhập
    int saveRole =0;
    //Lưu tên đăng nhập
    String saveName;
    
    /**
     * Phương thức lấy role ở form chính
     * @param stt 
     */
    void getRole(int role){
        saveRole = role;
    }
    /**
     * Phương thức lấy tên ở form chính
     * @param str 
     */
    void getNames(String str){
        saveName = str;
    }
    
    
    Contract selectedHD = null;

    public frm_Contract() {
        initComponents();
        this.setLocationRelativeTo(null); 
        this.setResizable(false);
        this.setTitle("HỆ THỐNG QUẢN LÝ NHÀ TRỌ/QUẢN LÝ HỢP ĐỒNG");
        loadKH();
        showDataList();
        LoadArea();
        LoadRoom(0);
        
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_TenHD = new javax.swing.JTextField();
        txt_SoHD = new javax.swing.JTextField();
        J_NgayLap = new com.toedter.calendar.JDateChooser();
        J_NgayKetThuc = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbb_MaKH = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_Box = new javax.swing.JTextField();
        txt_NumberBox = new javax.swing.JTextField();
        cbb_Phong = new javax.swing.JComboBox<>();
        cbb_KV = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_GiaPhong = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_grid = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        btn_Home = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUẢN LÝ HỢP ĐỒNG");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(448, 448, 448))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("TÊN HỢP ĐỒNG");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("SỐ HỢP ĐỒNG");

        txt_TenHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_TenHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TenHDActionPerformed(evt);
            }
        });

        txt_SoHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_SoHD.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("NGÀY KẾT THÚC");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("NGÀY LẬP");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("MÃ KHÁCH HÀNG");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("TỦ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Ô SỐ");

        txt_Box.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_NumberBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbb_Phong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cbb_KV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("KHU VỰC");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("GIÁ PHÒNG");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("PHÒNG");

        txt_GiaPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_GiaPhong.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_Box, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addGap(72, 72, 72)
                                .addComponent(txt_NumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(J_NgayKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(J_NgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbb_MaKH, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_SoHD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_TenHD)
                            .addComponent(cbb_KV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbb_Phong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_GiaPhong))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_SoHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_TenHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbb_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbb_KV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbb_Phong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_GiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(J_NgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(J_NgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txt_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_NumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {J_NgayKetThuc, J_NgayLap, cbb_KV, cbb_MaKH, cbb_Phong, txt_Box, txt_GiaPhong, txt_NumberBox, txt_SoHD, txt_TenHD});

        tab_grid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tab_grid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Số Hợp Đồng", "Tên Hợp Đồng", "Mã Khách Hàng", "MÃ KHU VỰC", "MÃ PHÒNG", "Ngày Lập", "Ngày Kết Thúc", "TỦ", "Ô SỐ"
            }
        ));
        jScrollPane1.setViewportView(tab_grid);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_add.setText("Thêm");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_del.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_del.setText("Xóa");
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_update.setText("Sửa");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_Reset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Reset.setText("Làm Mới");
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        btn_Home.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Home.setText("Trang Chủ");
        btn_Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Home, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_Reset, btn_add, btn_del, btn_update});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Home, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_Home, btn_Reset, btn_add, btn_del, btn_update});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Phương thức load khách hàng 
     */
    private void loadKH(){
        cbb_MaKH.removeAllItems();// Xóa hết những giá trị có trong combobox
        DSKH = KHServices.getAllRecords();//Select các giá trị của khách hàng truyền vào danh sách KH
       // Duyệt từng đối tượng khách hàng
        for(Customer KH : DSKH){
            // Thêm các khách hàng vào combobox
            cbb_MaKH.addItem(KH);
        }
        // Hiển thị tên khách hàng cho combobox
          cbb_MaKH.setRenderer(new DefaultListCellRenderer() {
              @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                
                if(value instanceof Customer){
                    Customer KH = (Customer) value;                  
                    setText( String.valueOf( KH.getTENKH()));
                }
                return this;
            }
        } );
        
    
        
    }
    private void txt_TenHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TenHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TenHDActionPerformed
/**
 * Phương thức load khu vực
 */
    private void LoadArea() {
        //Xóa các item
        cbb_KV.removeAllItems();
        // Truyền các giá trị khu vực cho danh sách khu vực
        dsArea = areaServices.getAllRecords();
        // Duyệt qua khu vực trong danh sách khu vực
        for(Area item : dsArea){
            // Truyền các khu vực vào combobox
            cbb_KV.addItem(item);
        }       
        // Hiển thị tên khu vực cho combobox khu vực
        cbb_KV.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);               
                if(value instanceof Area){
                    Area item = (Area) value;
                    //hiển thị tên khu vực
                    setText(item.getTENKV());
                }
                return this;
            }
            
        });
        //Bắt sự kiện khi click vào item trong combobox khu vực
        cbb_KV.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED){
                    Area area = (Area) cbb_KV.getSelectedItem();
                    int makv = area.getMAKV();
                    System.out.println(makv);
                    //Truyền mã khu vực vào phòng
                    LoadRoom(makv);
                    
                }
            }
        });
    }
    /**
     * Phương thức load combobox Phòng
     * @param makv 
     */
    private void LoadRoom(int makv){
        
        cbb_Phong.removeAllItems();
        //Nếu mã khu vực khác 0
        if(makv != 0){
           // Truyền vào danh sách phòng đối tượng dựa vào mã khu vực
            dsRoom = roomServices.getRecordByArea(makv);
        }
        else{
        
            dsRoom = roomServices.getAllRecords();
        }
        
        //Duyệt phòng trong danh sách phòng
        for (Room item : dsRoom) {
            //Thêm các item vào combobx Phòng
            cbb_Phong.addItem(item);
        }
        // Hiển thị mã phòng
        cbb_Phong.setRenderer(new DefaultListCellRenderer(){
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);               
            if(value instanceof Room){
                Room item = (Room) value;
                setText(String.valueOf(item.getMAPHONG()));
                }
            return this;
            }

        });
        //get đơn giá
       cbb_Phong.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED){
                   Room room = (Room) cbb_Phong.getSelectedItem();
                   int maloai = room.getMALOAI();
                   ArrayList<RoomType> dsRoomType = roomTypeServices.getAllRecords();
                   int dongia = findRoomType(maloai, dsRoomType).getDONGIA();
                   txt_GiaPhong.setText(dongia+"");
                }
            }
        });
    }
     
    
    
    
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
    //Khai báo biến
    String TenHD = txt_TenHD.getText();
    Date NgayLap = J_NgayLap.getDate();
    Date NgayKetThuc = J_NgayKetThuc.getDate(); 
    Customer KH = (Customer) cbb_MaKH.getSelectedItem();
    String Box = txt_Box.getText();
    int NumberBox = Integer.valueOf(txt_NumberBox.getText());
    Area KV = (Area) cbb_KV.getSelectedItem(); 
    Room Phong = (Room) cbb_Phong.getSelectedItem();
        
        // Kiểm tra ô ngày lập và kết thúc
         if(NgayLap == null && NgayKetThuc == null)
        {
            JOptionPane.showMessageDialog(null, "Bạn cần phải nhập ngày bắt đầu và kết thúc");
        }
        
        
        else
        { 
         
        int rowEffected = HDServices.AddNewRecord(TenHD,KH.getMAKH(),KV.getMAKV(),Phong.getMAPHONG(),NgayLap,NgayKetThuc,Box,NumberBox);
         if(rowEffected > 0){
           //  showUserAccounts();
             JOptionPane.showMessageDialog(null, "Tao moi thanh cong!");
             showDataList();
         }            
         else
             JOptionPane.showMessageDialog(null, "Tạo mới thất bại");
        }
         clear();
    }//GEN-LAST:event_btn_addActionPerformed

    /**
     * Dùng để show data ra gridview
     */
     private void showDataList(){
        // Khai báo defaul model
        DefaultTableModel model = (DefaultTableModel)this.tab_grid.getModel(); 
        model.setRowCount(0); // Set count = 0
                
        //Select toàn bộ data của hợp động vào list
        ArrayList<Contract> list = HDServices.getAllRecords();
        
        DSHD = list;//dùng cho việc chọn hợp đồng
               
        Object[] row = new Object[10]; // Khai báo mảng
        
        //Gán các item tương đương cho table
        for(int i = 0; i < list.size(); i++){            
            row[0] = list.get(i).getSOHD();
            row[1] = list.get(i).getTENHD();
            row[2] = list.get(i).getMAKH();      
            row[3] = list.get(i).getMAKV();
            row[4] = list.get(i).getMAPHONGTRO();
            row[5] = list.get(i).getNGAYLAP();
            row[6] = list.get(i).getNGAYKETTHUC();
            row[7] = list.get(i).getTU();
            row[8] = list.get(i).getO();
              
            model.addRow(row);
        }
        //Lớp interface thể hiện vùng chọn tĩnh
        ListSelectionModel cellSelectionModel = tab_grid.getSelectionModel();
        
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Chế độ chọn đơn
        //Thêm listener vào DS mỗi khi vùng chọn có thay đổi       
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                //Gọi đến thay đổi grid
                gridSelectedChanged(e);
            }
          });
    }
     
      public void gridSelectedChanged(ListSelectionEvent e) {
   
     int selectedID = 0; 
       
//       int[] selectedRows = tab_grid.getSelectedRows();
//       int[] selectedColumns = tab_grid.getSelectedColumns();
        // Chọn hàng
       int selectedRow = tab_grid.getSelectedRow();
       // Chọn Cột
       int selectedColumn = tab_grid.getSelectedColumn();
       // Nếu cột và hàng được chọn lớn hơn 0
       if(selectedRow >=0 && selectedColumn >=0){
           //Gán chọn ID = hàng được chọn và cột là 0         
           selectedID = (int) tab_grid.getValueAt(selectedRow, 0);
           
           
           selectedHD= findHD(selectedID,DSHD);
           
         
               if(selectedID != 0){
               showDataDetail(selectedID,
                                    (String)tab_grid.getValueAt(selectedRow, 1), 
                                    (int) tab_grid.getValueAt(selectedRow, 2), 
                                    (int) tab_grid.getValueAt(selectedRow, 3),
                                    (int) tab_grid.getValueAt(selectedRow, 4),
                                    (Date) tab_grid.getValueAt(selectedRow, 5), 
                                    (Date)tab_grid.getValueAt(selectedRow, 6), 
                                    (String)tab_grid.getValueAt(selectedRow, 7),
                                    (int)tab_grid.getValueAt(selectedRow, 8));
                                  
                   
               }       
       }
    }
       private void showDataDetail(int SOHD, String TENHD,  int MAKH,int MAKV, int MAPHONG, Date NGAYLAP, Date NGAYKETTHUC, String TU, int O){
     
        txt_SoHD.setText(""+ SOHD);        
        txt_TenHD.setText(TENHD);
        J_NgayLap.setDate(NGAYLAP);
        J_NgayKetThuc.setDate(NGAYKETTHUC);
        txt_Box.setText(TU);
        txt_NumberBox.setText(String.valueOf(O));
        if(selectedHD != null){
            cbb_MaKH.setSelectedItem(findKH(selectedHD.getMAKH(), DSKH));
            cbb_KV.setSelectedItem(findKV(selectedHD.getMAKV(), dsArea));
            cbb_Phong.setSelectedItem(findRoom(selectedHD.getMAPHONGTRO(), dsRoom));
                 
    }
 }          
       /**
        * Phương thức tìm khách hàng
        * @param MaKH
        * @param DSKH
        * @return 
        */
            public Customer findKH(int MaKH, ArrayList<Customer> DSKH) {
            //Duyệt qua khách hàng trong danh sách khách hàng
            for (Customer item : DSKH) {
                //Nếu mã khách hàng có tồn tại thì trả về item KH
                if (item.getMAKH()== MaKH) {
                    return item;
                }
            }
            return null;
          }
            /**
             * Phương thức tìm hợp đồng
             * @param SoHD
             * @param DSHD
             * @return 
             */
             public Contract findHD(int SoHD, ArrayList<Contract> DSHD) {
             // Duyệt qua các item trong danh sách
            for (Contract item : DSHD) {
                if (item.getSOHD()== SoHD) {
                    return item;
                }
            }
            return null;
          }
             /**
              * Phương thức tìm loại phòng
              * @param maloai
              * @param dsRoomType
              * @return 
              */
               private RoomType findRoomType(int maloai, ArrayList<RoomType> dsRoomType){
                // Duyệt qua các item trong danh sách
                for(RoomType item : dsRoomType){
                    if(item.getMALOAI() == maloai){
                        return item;
                    }
                }
                return null;
            }
              /**
               * Phương thức tìm phòng
               * @param MaPhong
               * @param DSRoom
               * @return 
               */
            public Room findRoom(int MaPhong, ArrayList<Room> DSRoom) {
                 // Duyệt qua các item trong danh sách
                for (Room item : DSRoom) {
                    if (item.getMAPHONG()== MaPhong) {
                        return item;
                    }
                }
                return null;
            }
            /**
             * Phương thức tìm khu vực
             * @param MaKV
             * @param DSKV
             * @return 
             */
            public Area findKV(int MaKV, ArrayList<Area> DSKV) {
                 // Duyệt qua các item trong danh sách
                for (Area item : DSKV) {
                    if (item.getMAKV()== MaKV) {
                        return item;
                    }
                }
                return null;
            }
           
  
            
    
    
    private void btn_HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HomeActionPerformed
       frm_Index Home = new frm_Index();
       Home.setVisible(true);
       this.dispose();
       if(saveRole==1)
       {
           Home.setRoleName("Admin");  
       }
       else
       {
           Home.setRoleName("User");     
       }
       Home.setTenUser(saveName);           
    }//GEN-LAST:event_btn_HomeActionPerformed

    void clear(){
        txt_SoHD.setText("");
        txt_TenHD.setText("");
        txt_GiaPhong.setText("");
        txt_Box.setText("");
        txt_NumberBox.setText("");    
    }
    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
       clear();
    }//GEN-LAST:event_btn_ResetActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        //Khai báo biến
    int SOHD = Integer.parseInt(txt_SoHD.getText());
    String TenHD = txt_TenHD.getText();
    Date NgayLap = J_NgayLap.getDate();
    Date NgayKetThuc = J_NgayKetThuc.getDate(); 
    Customer KH = (Customer) cbb_MaKH.getSelectedItem();
    String Tu = txt_Box.getText();
    int O = Integer.valueOf(txt_NumberBox.getText());
     Area KV = (Area) cbb_KV.getSelectedItem(); 
    Room Phong = (Room) cbb_Phong.getSelectedItem();

        if(TenHD.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Hello");
        }
       else
        { 
         //call function
        int rowEffected = HDServices.UpdateRecord(SOHD,TenHD,KH.getMAKH(),KV.getMAKV(),Phong.getMAPHONG(),NgayLap,NgayKetThuc,Tu,O);
         if(rowEffected > 0){
           //  showUserAccounts();
             JOptionPane.showMessageDialog(null, "Cap nhat thanh cong!");
             showDataList();
         }            
         else
             JOptionPane.showMessageDialog(null, "Cap nhat thất bại");
        }
        clear();
    }//GEN-LAST:event_btn_updateActionPerformed

    
    
    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
          int SoHD = Integer.valueOf(txt_SoHD.getText()); 
        int input = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa?", "Confirmation...",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        System.out.println("Delete data? =" +input);

      if(!txt_SoHD.getText().equals("") ){
        if(input == 0)
        {
         
            int rowEffected = HDServices.DeleteRecord(SoHD);
            if(rowEffected > 0){
                showDataList();
                JOptionPane.showMessageDialog(null, "Xóa thành công!");
            }
            else
            JOptionPane.showMessageDialog(null, "Xóa thất bại");
        }
    }   
      else
          
              JOptionPane.showMessageDialog(null, "Ban can phai chon khu vuc de xoa"); 
      clear();
 
    }//GEN-LAST:event_btn_delActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Contract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Contract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Contract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Contract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Contract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser J_NgayKetThuc;
    private com.toedter.calendar.JDateChooser J_NgayLap;
    private javax.swing.JButton btn_Home;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_del;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<Area> cbb_KV;
    private javax.swing.JComboBox<Customer> cbb_MaKH;
    private javax.swing.JComboBox<Room> cbb_Phong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab_grid;
    private javax.swing.JTextField txt_Box;
    private javax.swing.JTextField txt_GiaPhong;
    private javax.swing.JTextField txt_NumberBox;
    private javax.swing.JTextField txt_SoHD;
    private javax.swing.JTextField txt_TenHD;
    // End of variables declaration//GEN-END:variables
}
